def tda_login():

  global access_token
  global refresh_token
  global header
  global expire_access_token

  # --------------------- TDA AUTHENTICATION AUTOMATION --------------------------

  # define the location of the Chrome Driver - CHANGE THIS!!!!!
  executable_path = {'executable_path': r'/usr/bin/chromedriver'}

  # Create a new instance of the browser, make sure we can see it (Headless = False)
  browser = Browser('chrome', **executable_path, headless=False)

  # define the components to build a URL
  method = 'GET'
  url = 'https://auth.tdameritrade.com/auth?'
  client_code = config2.tdaConsumerKey + '@AMER.OAUTHAP'

  # Define Payload, MAKE SURE TO HAVE THE CORRECT REDIRECT URI
  payload = {'response_type':'code',
             'redirect_uri':config2.tdaRedirectUrl,
             'client_id':client_code}

  # build the URL and store it in a new variable
  p = requests.Request(method, url, params=payload).prepare()
  myurl = p.url

  # go to the URL
  browser.visit(myurl)

  # define items to fillout form
  payload = {'username': config2.tdaUsername,
             'password': config2.tdaPassword}

  # fill out each part of the form and click submit
  browser.find_by_id("username").first.fill(payload['username'])
  browser.find_by_id("password").first.fill(payload['password'])
  browser.find_by_id("accept").first.click()
  time.sleep(1)

  # Get the Text Message Box
  browser.find_by_text('Can\'t get the text message?').first.click()

  # Get the Answer Box
  browser.find_by_value("Answer a security question").first.click()

  # Answer the Security Questions. 's is coded as \'s
  if browser.is_text_present('In what city was your high school?'):
    browser.find_by_id('secretquestion').first.fill(config2.tdaQHighSchool)

  elif browser.is_text_present('In what city was your father born?'):
    browser.find_by_id('secretquestion').first.fill(config2.tdaQFatherBorn)

  elif browser.is_text_present('In what city is your vacation home?'):
    browser.find_by_id('secretquestion').first.fill(config2.tdaQVacationHome)

  elif browser.is_text_present('What was your favorite restaurant in college?'):
    browser.find_by_id('secretquestion').first.fill(config2.tdaQRestaurant)

  # click the Accept terms button
  browser.find_by_id("accept").first.click()
  time.sleep(1)

  # click the Allow button
  browser.find_by_id("accept").first.click()

  # give it a second, then grab the url
  time.sleep(1)
  new_url = browser.url
  #print('new_url is: ', new_url)

  # grab the part we need, and decode it.
  parse_url = urllib.parse.unquote(new_url.split('code=')[1])
  #print('parse_rul is: ', parse_url)

  # close the browser
  browser.quit()


  # THE AUTHENTICATION ENDPOINT

  # define the endpoint
  url = r"https://api.tdameritrade.com/v1/oauth2/token"

  # define the headers
  headers = {"Content-Type":"application/x-www-form-urlencoded"}

  # define the payload
  payload = {'grant_type': 'authorization_code',
         'access_type': 'offline',
         'code': parse_url,
         'client_id':config2.tdaConsumerKey,
         'redirect_uri':config2.tdaRedirectUrl}

  # post the data to get the token
  authReply = requests.post(url, headers = headers, data=payload)

  # convert it (json string) to a dictionary
  decoded_content = authReply.json()
  #print('decoded_content is: ', decoded_content)

  # grab the access_token
  access_token = decoded_content['access_token']
  refresh_token = decoded_content['refresh_token']
  header = {'Authorization': "Bearer {}".format(access_token),
    "Content-Type":"application/json"}
  expire_access_token = time.time() + int(decoded_content['expires_in'])
  #expire_access_token = time.time() + 300	# try 5 minutes instead of 30 minutes

  #print(time.time())
  #print(expire_access_token)